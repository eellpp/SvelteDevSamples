<script>
	let name = '';
	let name_placeholder = "John Doe"
	let phone = '';
	let phone_placeholder = '+65 43211234';
	let email = '';
	let email_placeholder = 'test@gmail.com';
	let hasBeenClicked = false;
	let pickup = ''; 
	const pickupOptions = [
    'office',
    'town_hall',
    'telepathy'
  ];
	let extras = ''
	const extraOptions = [
		"Baby Seat",
		"Wheelchair Access",
		"Stock Tip"
	];
	let taxi = '';
	let datetime = '';
	const taxiOptions = ["car","van","Tuk Tuk"];

	let dropoff = "";
	const dropoffOptions = ["Airport","Beach","Fred Flinstone's House"];
	let comments = "";

	 function validateEmail(email) {
    var emailRegEx = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;  
    return emailRegEx.test(String(email).toLowerCase());
  }

  function validatePhoneNumber(number) {
    var regex = /^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/im;
    return regex.test(number);
  }

	$: isValidName = name.length > 2;
  $: isValidEmail = validateEmail(email);
  $: isValidPhone = validatePhoneNumber(phone);

	async function handleSubmission() {
    hasBeenClicked = true;
		postData = JSON.stringify({
				name,phone,email,pickup,extras,dropoff,datetime,comments});
		console.log(postData)
		
    if (isValidName && isValidEmail && isValidPhone && isValidPassword) {
      // Send data somewhere
		// 	const res = await fetch('https://httpbin.org/post', {
		// 														method: 'POST',
		// 														body: postData })
		
		// const json = await res.json()
		// result = JSON.stringify(json)
      console.log("submitted");
    }
  }
	
</script>

<form class="myForm" on:submit|preventDefault={handleSubmission}>
  <fieldset id="customer">
    <label for="customer_name" >Name </label>
	
    <input type="text" bind:value={name} id="customer_name" placeholder={name_placeholder} required>
			 {#if hasBeenClicked && !isValidName} 
        <!-- <p class="validation-error">Please enter a valid name</p> -->
			 <span class="error">Please enter a valid name</span>
      {/if}
    <label for="phone_number">Phone </label>
		
    <input type="tel"  bind:value={phone} name="phone_number" id="phone_number" placeholder={phone_placeholder}>
		 {#if hasBeenClicked && !isValidPhone} 
        <!-- <p class="validation-error">Please enter a valid name</p> -->
			 <span class="error">Please enter a valid phone number</span>
      {/if}
    <label for="email_address">Email </label>
    <input type="email"  bind:value={email} name="email_address" id="email_address" placeholder={email_placeholder} >
		 {#if hasBeenClicked && !isValidEmail} 
        <!-- <p class="validation-error">Please enter a valid name</p> -->
			 <span class="error">Please enter a valid email</span>
      {/if}
  </fieldset>
  <fieldset id="taxi">
    <legend>Which taxi do you require?</legend>
		{#each taxiOptions as option}
			<label>
				<input type="checkbox" bind:group={taxi} name="flavours" value={option} />
				{option}
			</label>
			{/each}
    
  </fieldset>

  <fieldset id="extras">
    <legend>Extras</legend>
		{#each extraOptions as option}
			<label>
				<input type="checkbox" bind:group={extras} name="flavours" value={option} />
				{option}
			</label>
			{/each}
  </fieldset>
  
  <fieldset id="pickup">
    <label for="pickup_time">Pickup Date/Time</label>
    <input type="datetime-local"  bind:value={datetime} name="pickup_time" id="pickup_time" required>

    <label for="pickup_place">Pickup Place</label>
		<select bind:value={pickup}>
			<option value="" selected="selected">Select One</option>
			  {#each pickupOptions as option}
			    <option value={option}>{option}</option>
			  {/each}
</select>
  </fieldset>

  <fieldset id="dropoff">
  <label for="dropoff_place">Dropoff Place</label>
    <input type="text"  bind:value={dropoff} name="dropoff_place" id="dropoff_place" required list="destinations">
    <datalist id="destinations">
				{#each dropoffOptions as option}
			    <option value={option}>{option}</option>
			  {/each}
    </datalist>
  </fieldset>
  
  <fieldset id="instructions">
    <label for="comments">Special Instructions</label>
    <textarea bind:value={comments}  name="comments" id="comments" maxlength="500"></textarea>
  </fieldset>

  <button id="submit">Submit Booking</button>

</form>

<!-- Style  -->
<style>
  * {
    box-sizing: border-box;
  }
  .myForm {
    display: grid;
    grid-template-areas: 
      "customer taxi"
      "customer extras"
      "pickup dropoff"
      "instructions instructions"
      "submit submit";
  	grid-template-columns: auto auto;  
  	grid-template-rows: auto auto auto auto;
    grid-gap: .8em .5em;
    background: #023047;
    padding: 1.2em;
  }
  .myForm textarea {
    height: calc(100% - 1.5em);
    }
  .myForm button {
    background: #fb8500;
    color: #023047;
    padding: 1em;
    }
  .myForm input:not([type=radio]):not([type=checkbox]), 
  .myForm textarea, 
  .myForm select {
   	width: 100%;
    border: 0;
    padding: 1em;
    margin: .5em 0;
  }
  .myForm label {
   display: block; 
  }
	.error {
    color: red;
		font-style: italic;
		font-size: 0.7em;
	}
  fieldset {
    border: 0;
  }
  #customer {
    grid-area: customer;
  }
  #taxi {
    grid-area: taxi;
  }
  #extras {
    grid-area: extras;
  }
  #pickup {
    grid-area: pickup;
  }
  #dropoff {
    grid-area: dropoff;
  }
  #instructions {
    grid-area: instructions;
  }
  #submit {
    grid-area: submit;
  }
</style>
